{"ast":null,"code":"import _regeneratorRuntime from\"/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import\"./Payment.css\";import{useStateValue}from\"./StateProvider\";import CheckoutProduct from\"./CheckoutProduct\";import{Link}from\"react-router-dom\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import CurrencyFormat from\"react-currency-format\";import{getBasketTotal}from\"./Reducer\";import axios from\"./axios\";import{useHistory}from\"react-router-dom\";import{db}from\"./firebase\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Payment(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],basket=_useStateValue2$.basket,user=_useStateValue2$.user,dispatch=_useStateValue2[1];var stripe=useStripe();var elements=useElements();var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),succeeded=_useState2[0],setSucceeded=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),processing=_useState4[0],setProcessing=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disabled=_useState8[0],setDisabled=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),clientSecret=_useState10[0],setClientSecret=_useState10[1];useEffect(function(){//generate the special stripe secret which allows to charge a customer\nvar getClientSecret=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:'post',//stripe expects the total in a currencies subunits\nurl:\"/payments/create?total=\".concat(getBasketTotal(basket)*100)});case 2:response=_context.sent;console.log(\"the new client secret is >>>>\",response.data.clientSecret);setClientSecret(response.data.clientSecret);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getClientSecret(){return _ref.apply(this,arguments);};}();getClientSecret();},[basket]);console.log('the secret is >>>>',clientSecret);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var payload;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setProcessing(true);_context2.next=4;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement)}}).then(function(_ref3){var paymentIntent=_ref3.paymentIntent;//paymentIntent = payment confermation\ndb.collection('user').doc(user===null||user===void 0?void 0:user.uid).collection('orders').doc(paymentIntent.id).set({basket:basket,amount:paymentIntent.amount,created:paymentIntent.created});setSucceeded(true);setError(null);setProcessing(false);dispatch({type:'EMPTY_BASKET'});history.replace('/orders');});case 4:payload=_context2.sent;case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){// listen for changes in the card element\nsetDisabled(event.empty);setError(event.error?event.error.message:\"\");};return/*#__PURE__*/_jsx(\"div\",{className:\"payment\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"payment__container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Checkout \",/*#__PURE__*/_jsxs(Link,{to:\"/checkout\",children:[basket===null||basket===void 0?void 0:basket.length,\" items\"]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Delivery address\"})}),/*#__PURE__*/_jsxs(\"div\",{class:\"payment__address\",children:[/*#__PURE__*/_jsx(\"p\",{children:user===null||user===void 0?void 0:user.email}),/*#__PURE__*/_jsx(\"p\",{children:\"123 React lane\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Los Angeles, CA\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Review items and delivery\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"payment__items\",children:basket===null||basket===void 0?void 0:basket.map(function(item){return/*#__PURE__*/_jsx(CheckoutProduct,{id:item.id,title:item.title,image:item.image,price:item.price,rating:item.rating});})})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"payment__details\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(CardElement,{onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{class:\"payment__priceContainer\",children:[/*#__PURE__*/_jsx(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/_jsxs(\"h3\",{children:[\"Order Total: \",value]});},decimalScale:2,value:getBasketTotal(basket),displayType:\"text\",thousandSeparator:true,prefix:\"$\"}),/*#__PURE__*/_jsx(\"button\",{disabled:processing||disabled||succeeded,children:/*#__PURE__*/_jsx(\"span\",{children:processing?/*#__PURE__*/_jsx(\"p\",{children:\"Processing\"}):\"Buy Now\"})})]})]})})]})]})});}export default Payment;","map":{"version":3,"sources":["/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Payment.js"],"names":["React","useEffect","useState","useStateValue","CheckoutProduct","Link","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","useHistory","db","Payment","basket","user","dispatch","stripe","elements","history","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","method","url","response","console","log","data","handleSubmit","event","preventDefault","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","payload","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./Reducer\";\nimport axios from \"./axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from \"./firebase\"\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    //generate the special stripe secret which allows to charge a customer\n    const getClientSecret = async () => {\n       const response = await axios({\n         method: 'post',\n         //stripe expects the total in a currencies subunits\n         url: `/payments/create?total=${getBasketTotal(basket) * 100 }`\n       });\n       console.log(\"the new client secret is >>>>\", response.data.clientSecret)\n       setClientSecret(response.data.clientSecret);\n    }\n\n    getClientSecret();\n    \n  }, [basket]);\n\n  console.log('the secret is >>>>', clientSecret);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n    \n\n    const payload = await stripe.confirmCardPayment(clientSecret,{\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({paymentIntent}) =>{\n      //paymentIntent = payment confermation\n      db.collection('user').doc(user?.uid).collection('orders').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created,\n      })\n\n      setSucceeded(true);\n      setError(null)\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET',\n\n      })\n\n      history.replace('/orders')\n    })\n\n  };\n  const handleChange = (event) => {\n    // listen for changes in the card element\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return (\n    <div className=\"payment\">\n      <div class=\"payment__container\">\n        <h1>\n          Checkout <Link to=\"/checkout\">{basket?.length} items</Link>\n        </h1>\n        {/* payment section -- delivery section */}\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Delivery address</h3>\n          </div>\n          <div class=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div class=\"payment__items\">\n            {basket?.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div class=\"payment__details\">\n            {/* Strip payment method */}\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div class=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}