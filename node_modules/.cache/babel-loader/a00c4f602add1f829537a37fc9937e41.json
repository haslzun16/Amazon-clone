{"ast":null,"code":"var _jsxFileName = \"/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./Reducer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    //generate the special stripe secret which allows to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        //stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true); // const payload = await stripe\n  };\n\n  const handleChange = event => {\n    // listen for changes in the card element\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Los Angeles, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 42\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 39\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"YIltpUzrDlWYTdNt6GmV2N/E7Lo=\", false, function () {\n  return [useStateValue, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Payment.js"],"names":["React","useEffect","useState","useStateValue","CheckoutProduct","Link","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","Payment","basket","user","dispatch","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","data","handleSubmit","event","preventDefault","handleChange","empty","message","length","email","map","item","id","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./Reducer\";\nimport axios from \"axios\";\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    //generate the special stripe secret which allows to charge a customer\n    const getClientSecret = async () => {\n       const response = await axios({\n         method: 'post',\n         //stripe expects the total in a currencies subunits\n         url: `/payments/create?total=${getBasketTotal(basket) * 100 }`\n       });\n       setClientSecret(response.data.clientSecret)\n    }\n    getClientSecret();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n\n    // const payload = await stripe\n  };\n  const handleChange = (event) => {\n    // listen for changes in the card element\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return (\n    <div className=\"payment\">\n      <div class=\"payment__container\">\n        <h1>\n          Checkout <Link to=\"/checkout\">{basket?.length} items</Link>\n        </h1>\n        {/* payment section -- delivery section */}\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Delivery address</h3>\n          </div>\n          <div class=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div class=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div class=\"payment__details\">\n            {/* Strip payment method */}\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div class=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}