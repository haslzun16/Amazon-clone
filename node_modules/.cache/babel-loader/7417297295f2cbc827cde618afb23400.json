{"ast":null,"code":"var _jsxFileName = \"/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./Reducer\";\nimport axios from \"./axios\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    //generate the special stripe secret which allows to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        //stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      console.log(\"the new client secret is >>>>\", response.data.clientSecret);\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log('the secret is >>>>', clientSecret);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymetnIntent\n    }) => {\n      //paymentIntent = payment confermation\n      db.collection('user').doc(user === null || user === void 0 ? void 0 : user.id);\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET'\n      });\n      history.replace('/orders');\n    });\n  };\n\n  const handleChange = event => {\n    // listen for changes in the card element\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Los Angeles, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 42\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 39\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"u2zAEzsRDvA0drRH9DyMWgE/0Fk=\", false, function () {\n  return [useStateValue, useStripe, useElements, useHistory];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Payment.js"],"names":["React","useEffect","useState","useStateValue","CheckoutProduct","Link","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","useHistory","db","Payment","basket","user","dispatch","stripe","elements","history","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","console","log","data","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymetnIntent","collection","doc","id","type","replace","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./Reducer\";\nimport axios from \"./axios\";\nimport { useHistory } from \"react-router-dom\";\nimport db from \"./firebase\"\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    //generate the special stripe secret which allows to charge a customer\n    const getClientSecret = async () => {\n       const response = await axios({\n         method: 'post',\n         //stripe expects the total in a currencies subunits\n         url: `/payments/create?total=${getBasketTotal(basket) * 100 }`\n       });\n       console.log(\"the new client secret is >>>>\", response.data.clientSecret)\n       setClientSecret(response.data.clientSecret);\n    }\n\n    getClientSecret();\n    \n  }, [basket]);\n\n  console.log('the secret is >>>>', clientSecret);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n    \n\n    const payload = await stripe.confirmCardPayment(clientSecret,{\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({paymetnIntent}) =>{\n      //paymentIntent = payment confermation\n      db.collection('user').doc(user?.id)\n\n      setSucceeded(true);\n      setError(null)\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET',\n\n      })\n\n      history.replace('/orders')\n    })\n\n  };\n  const handleChange = (event) => {\n    // listen for changes in the card element\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return (\n    <div className=\"payment\">\n      <div class=\"payment__container\">\n        <h1>\n          Checkout <Link to=\"/checkout\">{basket?.length} items</Link>\n        </h1>\n        {/* payment section -- delivery section */}\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Delivery address</h3>\n          </div>\n          <div class=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div class=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n        <div class=\"payment__section\">\n          <div class=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div class=\"payment__details\">\n            {/* Strip payment method */}\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div class=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}