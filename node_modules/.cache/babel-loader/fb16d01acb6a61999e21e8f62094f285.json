{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; //Selector\n\nexport const getBasketTotal = basket => basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n    case \"EMPTY_BASKET\":\n      return { ...state,\n        basket: []\n      };\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/haslhoff/Desktop/Amazon-clone/amazon-clone/src/Reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAAM,CAACG,MAAP,CAAc,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA7C,EAAqD,CAArD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,YAAMM,KAAK,GAAGH,KAAK,CAACR,MAAN,CAAaY,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACR,MAAV,CAAhB;;AAEA,UAAIW,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLM,QAAAA,OAAO,CAACC,IAAR,CACG,4BAA2BT,MAAM,CAACK,EAAG,yBADxC;AAGD;;AACD,SAAK,cAAL;AACA,aAAM,EACJ,GAAGN,KADC;AAEJR,QAAAA,MAAM,EAAE;AAFJ,OAAN;AAIA,aAAO,EACL,GAAGQ,KADE;AAELR,QAAAA,MAAM,EAAEe;AAFH,OAAP;;AAIF,SAAK,UAAL;AACE,aAAM,EACJ,GAAGP,KADC;AAEJP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFT,OAAN;;AAIF;AACE,aAAOO,KAAP;AAlCJ;AAoCD,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n};\n\n//Selector\nexport const getBasketTotal = (basket) =>\n  basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket!`\n        )\n      }\n      case \"EMPTY_BASKET\":\n      return{\n        ...state,\n        basket: [],\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n    case \"SET_USER\":\n      return{\n        ...state,\n        user: action.user\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}